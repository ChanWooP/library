DROP TABLE if exists USERS;
CREATE TABLE USERS (
	USER_ID VARCHAR(255) NOT NULL PRIMARY KEY 
	, USER_PASSWORD VARCHAR(255) NOT NULL
	, USER_NAME VARCHAR(255)
	, USER_SEX VARCHAR(1) CHECK(USER_SEX IN ('M', 'W'))
	, USER_BIRTH VARCHAR(10)
	, USER_AUTHORITY VARCHAR(10)
	, USER_LOGIN_FAIL_CNT INT 
	, USER_FIND_PASSWORD_YN VARCHAR(1) CHECK(USER_FIND_PASSWORD_YN IN ('Y', 'N'))
	, USER_OAUTH_TYPE VARCHAR(255)
	, CREATE_BY VARCHAR(255)
	, CREATE_DATE DATE
	, LAST_MODIFIED_BY VARCHAR(255)
	, LAST_MODIFIED_DATE DATE
);

DROP TABLE if exists LOGIN_TOKEN;
CREATE TABLE LOGIN_TOKEN
(
	  LOGIN_TOKEN_SERIES VARCHAR(255) NOT NULL PRIMARY KEY
	, LOGIN_TOKEN_USERNAME VARCHAR(255) NOT NULL
	, LOGIN_TOKEN VARCHAR(255) NOT NULL
	, LOGIN_TOKEN_LAST_USED VARCHAR(255) NOT NULL
	, CREATE_BY VARCHAR(255)
	, CREATE_DATE DATE
	, LAST_MODIFIED_BY VARCHAR(255)
	, LAST_MODIFIED_DATE DATE
);

DROP TABLE IF EXISTS BOOK_CATEGORY;
CREATE TABLE BOOK_CATEGORY
(
	  CATEGORY_ID INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY
	, CATEGORY_NAME VARCHAR(255) NOT NULL
	, CREATE_BY VARCHAR(255)
	, CREATE_DATE DATE
	, LAST_MODIFIED_BY VARCHAR(255)
	, LAST_MODIFIED_DATE DATE
);

DROP TABLE IF EXISTS BOOK;
CREATE TABLE BOOK
(
	  BOOK_ISBN VARCHAR(255) NOT NULL PRIMARY KEY
	, BOOK_CATEGORY_ID INTEGER
	, BOOK_TITLE VARCHAR(255)
	, BOOK_AUTHOR VARCHAR(255)
	, BOOK_PUBLISHER VARCHAR(255)
	, BOOK_DISTRIBUTOR VARCHAR(255)
	, BOOK_PUBLICATION_YEAR VARCHAR(10)
	, BOOK_INDEX BLOB
	, BOOK_INT BLOB
	, BOOK_AUTHOR_INT BLOB
	, BOOK_IMAGE VARCHAR(255)
	, BOOK_MAX_LOAN_CNT INTEGER
	, BOOK_MAX_RESERVE_CNT INTEGER
	, BOOK_LIKE INTEGER
	, BOOK_LOAN_CNT INTEGER
	, BOOK_RESERVE_CNT INTEGER
	, CREATE_BY VARCHAR(255)
	, CREATE_DATE DATE
	, LAST_MODIFIED_BY VARCHAR(255)
	, LAST_MODIFIED_DATE DATE
	, FOREIGN KEY(BOOK_CATEGORY_ID) REFERENCES BOOK_CATEGORY(CATEGORY_ID)
);